"use strict";(self.webpackChunk_1_relation_documentation=self.webpackChunk_1_relation_documentation||[]).push([[6379],{904:(e,o,n)=>{n.r(o),n.d(o,{assets:()=>r,contentTitle:()=>d,default:()=>m,frontMatter:()=>l,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"modules/forms/components/pages/fields/introduction","title":"Form Fields","description":"A guide to configuring the fields array for each form page, based on the schema.","source":"@site/docs/modules/forms/components/pages/fields/introduction.md","sourceDirName":"modules/forms/components/pages/fields","slug":"/modules/forms/components/pages/fields/introduction","permalink":"/docs/modules/forms/components/pages/fields/introduction","draft":false,"unlisted":false,"editUrl":"https://github.com/flowagentnu/1rel-documentation/tree/main/docs/modules/forms/components/pages/fields/introduction.md","tags":[],"version":"current","frontMatter":{},"sidebar":"docs","previous":{"title":"Introduction to Form Pages","permalink":"/docs/modules/forms/components/pages/introduction"},"next":{"title":"Field Key","permalink":"/docs/modules/forms/components/pages/fields/field_key"}}');var i=n(4848),t=n(8453);const l={},d="Form Fields",r={},c=[{value:"When to Use",id:"when-to-use",level:2},{value:"How It Works",id:"how-it-works",level:2},{value:"Field Object Properties (per schema)",id:"field-object-properties-per-schema",level:2},{value:"Usage Example",id:"usage-example",level:2}];function a(e){const o={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(o.header,{children:(0,i.jsx)(o.h1,{id:"form-fields",children:"Form Fields"})}),"\n",(0,i.jsxs)(o.p,{children:["A guide to configuring the ",(0,i.jsx)(o.code,{children:"fields"})," array for each form page, based on the schema."]}),"\n",(0,i.jsx)(o.h2,{id:"when-to-use",children:"When to Use"}),"\n",(0,i.jsx)(o.p,{children:"Use this page to define and configure the fields (inputs, HTML, options) that appear on each form page."}),"\n",(0,i.jsx)(o.h2,{id:"how-it-works",children:"How It Works"}),"\n",(0,i.jsxs)(o.ul,{children:["\n",(0,i.jsxs)(o.li,{children:["Each page's ",(0,i.jsx)(o.code,{children:"fields"})," property is an array of field objects."]}),"\n",(0,i.jsxs)(o.li,{children:["Each field object can contain:","\n",(0,i.jsxs)(o.ul,{children:["\n",(0,i.jsxs)(o.li,{children:[(0,i.jsx)(o.code,{children:"key"}),": Defines a user input field (see below)."]}),"\n",(0,i.jsxs)(o.li,{children:[(0,i.jsx)(o.code,{children:"html"}),": Defines a custom HTML display element."]}),"\n",(0,i.jsxs)(o.li,{children:[(0,i.jsx)(o.code,{children:"options"}),": Array of option objects for select-type fields."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(o.li,{children:["Only one of ",(0,i.jsx)(o.code,{children:"key"}),", ",(0,i.jsx)(o.code,{children:"html"}),", or ",(0,i.jsx)(o.code,{children:"options"})," should be used per field object."]}),"\n"]}),"\n",(0,i.jsx)(o.h2,{id:"field-object-properties-per-schema",children:"Field Object Properties (per schema)"}),"\n",(0,i.jsxs)(o.ul,{children:["\n",(0,i.jsxs)(o.li,{children:[(0,i.jsx)(o.code,{children:"key"})," (object, optional): Field definition. See ",(0,i.jsx)(o.a,{href:"/docs/modules/forms/components/pages/fields/field_key",children:"field_key.md"}),"."]}),"\n",(0,i.jsxs)(o.li,{children:[(0,i.jsx)(o.code,{children:"html"})," (object, optional): Custom HTML content. See ",(0,i.jsx)(o.a,{href:"/docs/modules/forms/components/pages/fields/field_html",children:"field_html.md"}),"."]}),"\n",(0,i.jsxs)(o.li,{children:[(0,i.jsx)(o.code,{children:"options"})," (array, optional): Array of option objects for select, radio, or checkbox fields. See ",(0,i.jsx)(o.a,{href:"/docs/modules/forms/components/pages/fields/field_options",children:"field_options.md"}),"."]}),"\n"]}),"\n",(0,i.jsx)(o.h2,{id:"usage-example",children:"Usage Example"}),"\n",(0,i.jsx)(o.pre,{children:(0,i.jsx)(o.code,{className:"language-json",children:'{\n  "fields": [\n    { "key": { "id": "customer_name", "label": "Customer Name", "fieldtype": "text" } },\n    { "key": { "id": "order_amount", "label": "Order Amount", "fieldtype": "number" } },\n    { "html": { "tag": "h3", "label": "Section Title" } },\n    { "key": { "id": "status", "label": "Status", "fieldtype": "dropdown" }, "options": [\n      { "id": "1", "value": "Active" },\n      { "id": "2", "value": "Inactive" }\n    ] }\n  ]\n}\n'})}),"\n",(0,i.jsx)(o.p,{children:(0,i.jsx)(o.em,{children:"This example shows a mix of input fields, a custom HTML element, and a dropdown with options."})})]})}function m(e={}){const{wrapper:o}={...(0,t.R)(),...e.components};return o?(0,i.jsx)(o,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}},8453:(e,o,n)=>{n.d(o,{R:()=>l,x:()=>d});var s=n(6540);const i={},t=s.createContext(i);function l(e){const o=s.useContext(t);return s.useMemo(function(){return"function"==typeof e?e(o):{...o,...e}},[o,e])}function d(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),s.createElement(t.Provider,{value:o},e.children)}}}]);