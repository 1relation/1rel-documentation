"use strict";(self.webpackChunk_1_relation_documentation=self.webpackChunk_1_relation_documentation||[]).push([[5905],{7255:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>c,contentTitle:()=>r,default:()=>h,frontMatter:()=>l,metadata:()=>o,toc:()=>d});const o=JSON.parse('{"id":"modules/forms/components/visibility","title":"Visibility","description":"A guide to configuring the visibility component for form buttons, controlling when and how buttons appear based on logic and user context.","source":"@site/docs/modules/forms/components/visibility.md","sourceDirName":"modules/forms/components","slug":"/modules/forms/components/visibility","permalink":"/docs/modules/forms/components/visibility","draft":false,"unlisted":false,"editUrl":"https://github.com/flowagentnu/1rel-documentation/tree/main/docs/modules/forms/components/visibility.md","tags":[],"version":"current","frontMatter":{},"sidebar":"docs","previous":{"title":"Items Component","permalink":"/docs/modules/forms/components/items"},"next":{"title":"Introduction to Form Pages","permalink":"/docs/modules/forms/components/pages/introduction"}}');var s=i(4848),t=i(8453);const l={},r="Visibility",c={},d=[{value:"When to Use",id:"when-to-use",level:2},{value:"How It Works",id:"how-it-works",level:2},{value:"Options &amp; Properties",id:"options--properties",level:2},{value:"Visual Options",id:"visual-options",level:3},{value:"Condition Options",id:"condition-options",level:3},{value:"Popconfirm Options",id:"popconfirm-options",level:3},{value:"Usage Example: Full Visibility Configuration",id:"usage-example-full-visibility-configuration",level:2}];function a(n){const e={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...n.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.header,{children:(0,s.jsx)(e.h1,{id:"visibility",children:"Visibility"})}),"\n",(0,s.jsxs)(e.p,{children:["A guide to configuring the ",(0,s.jsx)(e.code,{children:"visibility"})," component for form buttons, controlling when and how buttons appear based on logic and user context."]}),"\n",(0,s.jsx)(e.h2,{id:"when-to-use",children:"When to Use"}),"\n",(0,s.jsxs)(e.p,{children:["Use ",(0,s.jsx)(e.code,{children:"visibility"})," to control the appearance and availability of form buttons, ensuring they are shown only to the right users, at the right time, and in the right context."]}),"\n",(0,s.jsx)(e.h2,{id:"how-it-works",children:"How It Works"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:["The ",(0,s.jsx)(e.code,{children:"visibility"})," object is used within button or action configurations."]}),"\n",(0,s.jsx)(e.li,{children:"It combines visual settings, logical conditions, and optional confirmation dialogs."}),"\n",(0,s.jsxs)(e.li,{children:["The main properties are ",(0,s.jsx)(e.code,{children:"visual"}),", ",(0,s.jsx)(e.code,{children:"condition"}),", and ",(0,s.jsx)(e.code,{children:"popconfirm"}),"."]}),"\n"]}),"\n",(0,s.jsx)(e.h2,{id:"options--properties",children:"Options & Properties"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.code,{children:"visual"})," (object, required): Defines the button's appearance (label, color, icon, etc.)."]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.code,{children:"condition"})," (array, optional): Array of conditions (JSON Query) that must be true for the button to be visible. See ",(0,s.jsx)(e.a,{href:"/docs/JSON/json-query",children:"JSON Query Documentation"}),"."]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.code,{children:"popconfirm"})," (object, optional): Adds a confirmation dialog before the action is executed."]}),"\n"]}),"\n",(0,s.jsx)(e.h3,{id:"visual-options",children:"Visual Options"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.code,{children:"label"})," (string, required): Button text."]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.code,{children:"labels"})," (object, optional): Translated labels. See ",(0,s.jsx)(e.a,{href:"/docs/misc/languages",children:"Languages"}),"."]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.code,{children:"textColor"})," (string, optional, default: ",(0,s.jsx)(e.code,{children:"white"}),"): Button text color."]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.code,{children:"bgColor"})," (string, optional, default: ",(0,s.jsx)(e.code,{children:"primary"}),"): Button background color."]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.code,{children:"icon"})," (string, optional): Button icon. See ",(0,s.jsx)(e.a,{href:"/docs/misc/icons",children:"Icons"}),"."]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.code,{children:"displayIconOnly"})," (boolean, optional, default: ",(0,s.jsx)(e.code,{children:"false"}),"): Show only the icon, hide text."]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.code,{children:"allowMultipleItems"})," (boolean, optional, default: ",(0,s.jsx)(e.code,{children:"false"}),"): Enable button for multiple selected items."]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.code,{children:"placement"})," (string, optional, default: ",(0,s.jsx)(e.code,{children:"widget"}),"): Where the button appears (",(0,s.jsx)(e.code,{children:"widget"})," or ",(0,s.jsx)(e.code,{children:"row"}),")."]}),"\n"]}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"Example:"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'"visual": {\n  "label": "Complete Task",\n  "textColor": "white",\n  "bgColor": "success",\n  "icon": "check_circle",\n  "displayIconOnly": false\n}\n'})}),"\n",(0,s.jsx)(e.h3,{id:"condition-options",children:"Condition Options"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:["Array of conditions, each as ",(0,s.jsx)(e.code,{children:"[key, operator, value]"}),"."]}),"\n",(0,s.jsx)(e.li,{children:"Controls when the button is visible."}),"\n"]}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"Example:"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'"condition": [\n  ["task.cf433", "!=", "option_844"],\n  ["group", "IN", "Sales"]\n]\n'})}),"\n",(0,s.jsx)(e.h3,{id:"popconfirm-options",children:"Popconfirm Options"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.code,{children:"text"})," (string, required): Confirmation message."]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.code,{children:"no"}),' (string, optional, default: "Cancel"): Cancel button text.']}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.code,{children:"yes"}),' (string, optional, default: "Confirm"): Confirm button text.']}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.code,{children:"show"})," (boolean, required): Whether to show the confirmation dialog."]}),"\n"]}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"Example:"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'"popconfirm": {\n  "text": "Confirm that the task is done",\n  "no": "Cancel",\n  "yes": "Confirm",\n  "show": true\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"usage-example-full-visibility-configuration",children:"Usage Example: Full Visibility Configuration"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "visibility": {\n    "visual": {\n      "label": "Complete Task",\n      "textColor": "white",\n      "bgColor": "success",\n      "icon": "check_circle",\n      "displayIconOnly": false\n    },\n    "condition": [\n      ["task.cf433", "!=", "option_844"],\n      ["group", "IN", "Sales"]\n    ],\n    "popconfirm": {\n      "text": "Confirm that the task is done",\n      "no": "Cancel",\n      "yes": "Confirm",\n      "show": true\n    }\n  }\n}\n'})})]})}function h(n={}){const{wrapper:e}={...(0,t.R)(),...n.components};return e?(0,s.jsx)(e,{...n,children:(0,s.jsx)(a,{...n})}):a(n)}},8453:(n,e,i)=>{i.d(e,{R:()=>l,x:()=>r});var o=i(6540);const s={},t=o.createContext(s);function l(n){const e=o.useContext(t);return o.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function r(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(s):n.components||s:l(n.components),o.createElement(t.Provider,{value:e},n.children)}}}]);