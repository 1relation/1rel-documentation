"use strict";(self.webpackChunk_1_relation_documentation=self.webpackChunk_1_relation_documentation||[]).push([[3965],{9450:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>h,default:()=>c,frontMatter:()=>i,metadata:()=>d,toc:()=>o});var r=n(5893),s=n(1151);const i={},h="Chart Widget",d={id:"apps/widgets/apps-chart",title:"Chart Widget",description:"alt text",source:"@site/docs/apps/widgets/apps-chart.md",sourceDirName:"apps/widgets",slug:"/apps/widgets/apps-chart",permalink:"/docs/apps/widgets/apps-chart",draft:!1,unlisted:!1,editUrl:"https://github.com/1relation/1rel-documentation/tree/main/docs/apps/widgets/apps-chart.md",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Sum Widget",permalink:"/docs/apps/widgets/apps-sum"},next:{title:"integrations-optimo-route",permalink:"/docs/apps/integrations/integrations-optimo-route"}},a={},o=[{value:"How to Access the Chart Widget",id:"how-to-access-the-chart-widget",level:2},{value:"Configuring the Chart Widget through the UI",id:"configuring-the-chart-widget-through-the-ui",level:2},{value:"JSON Configuration (If Applicable)",id:"json-configuration-if-applicable",level:2},{value:"Full JSON Example",id:"full-json-example",level:3},{value:"JSON Structure Breakdown",id:"json-structure-breakdown",level:3},{value:"Chart Properties",id:"chart-properties",level:4},{value:"Properties:",id:"properties",level:5}];function l(e){const t={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",h5:"h5",hr:"hr",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.h1,{id:"chart-widget",children:"Chart Widget"}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.img,{alt:"alt text",src:n(8508).Z+"",width:"1415",height:"327"})}),"\n",(0,r.jsx)(t.p,{children:"The Chart Widget is used to display a graphical representation of various values within the system. For example, it can effectively visualize the sales value and cost value of a project, providing an easy-to-understand overview of financial metrics."}),"\n",(0,r.jsx)(t.hr,{}),"\n",(0,r.jsx)(t.h2,{id:"how-to-access-the-chart-widget",children:"How to Access the Chart Widget"}),"\n",(0,r.jsxs)(t.p,{children:["Navigate to ",(0,r.jsx)(t.strong,{children:"Module > Module settings > Widgets"})," to find and set up the Chart Widget. Alternatively, you can access Chart Widgets through the ",(0,r.jsx)(t.strong,{children:"Tab Widgets"})," option from a dashboard."]}),"\n",(0,r.jsx)(t.hr,{}),"\n",(0,r.jsx)(t.h2,{id:"configuring-the-chart-widget-through-the-ui",children:"Configuring the Chart Widget through the UI"}),"\n",(0,r.jsx)(t.p,{children:"To configure the Chart Widget through the FlowAgent UI, follow these steps:"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Name"}),": Enter a name for the widget to identify it on the dashboard."]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Label"}),": Enter a label for the widget."]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Type"}),": Select 'Chart' from the dropdown to choose the widget type."]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Sort"}),": Specify the position of the widget on the dashboard."]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Size"}),": Set the size of the widget (between 1 and 12)."]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Tabs"}),": Select the tabs where this widget should be displayed."]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Columns"}),": This setting is not relevant for the Chart Widget."]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Query"}),": Provide a JSON query to filter the data that will be visualized."]}),"\n"]}),"\n",(0,r.jsx)(t.p,{children:'Note: The "Create items in module" option is not relevant for this functionality.'}),"\n",(0,r.jsx)(t.p,{children:"You can configure the Chart Widget using JSON to further customize its settings. Each property allows for specific customizations to ensure the chart behaves and displays data in a manner that best suits user needs."}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.img,{alt:"alt text",src:n(7456).Z+"",width:"1078",height:"1141"})}),"\n",(0,r.jsx)(t.hr,{}),"\n",(0,r.jsx)(t.h2,{id:"json-configuration-if-applicable",children:"JSON Configuration (If Applicable)"}),"\n",(0,r.jsx)(t.h3,{id:"full-json-example",children:"Full JSON Example"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-json",children:'{\n  "chart": {\n    "type": "pie",\n    "label": "Economy",\n    "labels": [\n      "Salesvalue",\n      "Cost"\n    ],\n    "data": [\n      "[cf1270]",\n      "[cf1271]"\n    ],\n    "backgroundColor": [\n      "green",\n      "orange"\n    ]\n  },\n  "height": 250,\n  "showWidgetHeader": false\n}\n'})}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.strong,{children:"Explanation:"})}),"\n",(0,r.jsxs)(t.p,{children:['The JSON configuration above represents a pie chart titled "Economy" with two data points: "Salesvalue" and "Cost." Each data point is represented by a unique identifier and color. The property ',(0,r.jsx)(t.code,{children:"height"})," defines the height of the chart, and ",(0,r.jsx)(t.code,{children:"showWidgetHeader"})," determines whether the widget header is displayed."]}),"\n",(0,r.jsx)(t.hr,{}),"\n",(0,r.jsx)(t.h3,{id:"json-structure-breakdown",children:"JSON Structure Breakdown"}),"\n",(0,r.jsx)(t.h4,{id:"chart-properties",children:"Chart Properties"}),"\n",(0,r.jsx)(t.p,{children:"The main properties of the chart configuration are described below:"}),"\n",(0,r.jsx)(t.h5,{id:"properties",children:"Properties:"}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Property"}),(0,r.jsx)(t.th,{children:"Type"}),(0,r.jsx)(t.th,{children:"Required"}),(0,r.jsx)(t.th,{children:"Description"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"chart"}),(0,r.jsx)(t.td,{children:"object"}),(0,r.jsx)(t.td,{children:"Yes"}),(0,r.jsx)(t.td,{children:"Defines the chart settings, including type, labels, and data."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"height"}),(0,r.jsx)(t.td,{children:"number"}),(0,r.jsx)(t.td,{children:"No"}),(0,r.jsx)(t.td,{children:"Specifies the height of the chart in pixels."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"showWidgetHeader"}),(0,r.jsx)(t.td,{children:"boolean"}),(0,r.jsx)(t.td,{children:"No"}),(0,r.jsx)(t.td,{children:"Indicates if the widget header should be shown."})]})]})]}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.strong,{children:"Example:"})}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-json",children:'{\n  "chart": {},\n  "height": 500,\n  "showWidgetHeader": true\n}\n'})}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.strong,{children:"Explanation:"})}),"\n",(0,r.jsxs)(t.p,{children:["This example includes the three main properties: ",(0,r.jsx)(t.code,{children:"chart"}),", which defines the chart settings; ",(0,r.jsx)(t.code,{children:"height"}),", which specifies the height of the chart in pixels; and ",(0,r.jsx)(t.code,{children:"showWidgetHeader"}),", which determines if the widget header should be shown."]}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.strong,{children:"Chart Object Properties:"})}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Property"}),(0,r.jsx)(t.th,{children:"Type"}),(0,r.jsx)(t.th,{children:"Required"}),(0,r.jsx)(t.th,{children:"Description"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"type"}),(0,r.jsx)(t.td,{children:"string"}),(0,r.jsx)(t.td,{children:"Yes"}),(0,r.jsx)(t.td,{children:'The type of chart to display (e.g., "pie").'})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"label"}),(0,r.jsx)(t.td,{children:"string"}),(0,r.jsx)(t.td,{children:"Yes"}),(0,r.jsx)(t.td,{children:"The title of the chart displayed to users."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"labels"}),(0,r.jsx)(t.td,{children:"array"}),(0,r.jsx)(t.td,{children:"Yes"}),(0,r.jsx)(t.td,{children:"The labels for each segment of the chart."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"data"}),(0,r.jsx)(t.td,{children:"array"}),(0,r.jsx)(t.td,{children:"Yes"}),(0,r.jsx)(t.td,{children:"The data values corresponding to each label. can either be a fixed value or [cfxxx] to reference a customfield"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"backgroundColor"}),(0,r.jsx)(t.td,{children:"array"}),(0,r.jsx)(t.td,{children:"Yes"}),(0,r.jsx)(t.td,{children:"The colors used for each segment of the chart."})]})]})]}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.strong,{children:"Example:"})}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-json",children:'{\n  "chart": {\n    "type": "bar",\n    "label": "Economy",\n    "labels": [\n      "Salesvalue",\n      "Cost"\n    ],\n    "data": [\n      "[cf1270]",\n      "[cf1271]"\n    ],\n    "backgroundColor": [\n      "green",\n      "orange"\n    ]\n  },\n  "height": 500,\n  "showWidgetHeader": true\n}\n'})}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.strong,{children:"Explanation:"})}),"\n",(0,r.jsxs)(t.p,{children:['This example configures a bar chart titled "Economy" with two data points: "Salesvalue" and "Cost." Each data point comes from a different custom field, represented by ',(0,r.jsx)(t.code,{children:"[cf1270]"}),' for "Salesvalue" and ',(0,r.jsx)(t.code,{children:"[cf1271]"}),' for "Cost." The ',(0,r.jsx)(t.code,{children:"backgroundColor"}),' property is used to set the colors for each data point, with "green" for "Salesvalue" and "orange" for "Cost." The ',(0,r.jsx)(t.code,{children:"height"})," property defines the height of the chart in pixels, set to 500 in this example. The ",(0,r.jsx)(t.code,{children:"showWidgetHeader"})," property is set to ",(0,r.jsx)(t.code,{children:"true"}),", which means the widget header will be displayed."]}),"\n",(0,r.jsx)(t.hr,{})]})}function c(e={}){const{wrapper:t}={...(0,s.a)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},8508:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/app.chart.header-63127293e8873106ecab915f7b906e10.png"},7456:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/apps-chart-setup-6c0c30a529139940c36c13a8c0202cba.png"},1151:(e,t,n)=>{n.d(t,{Z:()=>d,a:()=>h});var r=n(7294);const s={},i=r.createContext(s);function h(e){const t=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:h(e.components),r.createElement(i.Provider,{value:t},e.children)}}}]);