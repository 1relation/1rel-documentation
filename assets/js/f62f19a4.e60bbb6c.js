"use strict";(self.webpackChunk_1_relation_documentation=self.webpackChunk_1_relation_documentation||[]).push([[2009],{1577:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>r,default:()=>c,frontMatter:()=>d,metadata:()=>l,toc:()=>a});var t=i(5893),s=i(1151);const d={},r="Maps widget",l={id:"apps/widgets/apps-maps",title:"Maps widget",description:"The Maps Widget in FlowAgent allows you to display and interact with the geographical location of items from the system on your dashboard. It provides a visual representation of data, making it easier to understand the spatial distribution of various entities.",source:"@site/docs/apps/widgets/apps-maps.md",sourceDirName:"apps/widgets",slug:"/apps/widgets/apps-maps",permalink:"/docs/apps/widgets/apps-maps",draft:!1,unlisted:!1,editUrl:"https://github.com/1relation/1rel-documentation/tree/main/docs/apps/widgets/apps-maps.md",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Details Widget",permalink:"/docs/apps/widgets/apps-details"},next:{title:"Chart Widget",permalink:"/docs/apps/widgets/apps-chart"}},o={},a=[{value:"3.1 Module ID Configuration",id:"31-module-id-configuration",level:4},{value:"Example",id:"example",level:5},{value:"3.2 Latitude and Longitude Configuration",id:"32-latitude-and-longitude-configuration",level:4},{value:"Example",id:"example-1",level:5},{value:"3.3 Popup Configuration",id:"33-popup-configuration",level:4},{value:"Example",id:"example-2",level:5},{value:"3.4 Widget Display Configuration",id:"34-widget-display-configuration",level:4},{value:"Example",id:"example-3",level:5},{value:"3.5 Data Filtering with Queries",id:"35-data-filtering-with-queries",level:4},{value:"Example",id:"example-4",level:5},{value:"3.6 Relations Configuration",id:"36-relations-configuration",level:4},{value:"Example",id:"example-5",level:5},{value:"3.7 Marker Icon Configuration",id:"37-marker-icon-configuration",level:4},{value:"Example",id:"example-6",level:5},{value:"3.8 Marker Color Configuration",id:"38-marker-color-configuration",level:4},{value:"Example",id:"example-7",level:5}];function h(e){const n={blockquote:"blockquote",code:"code",em:"em",h1:"h1",h4:"h4",h5:"h5",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"maps-widget",children:"Maps widget"}),"\n",(0,t.jsx)(n.p,{children:"The Maps Widget in FlowAgent allows you to display and interact with the geographical location of items from the system on your dashboard. It provides a visual representation of data, making it easier to understand the spatial distribution of various entities."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"alt text",src:i(6545).Z+"",width:"632",height:"276"})}),"\n",(0,t.jsxs)(n.p,{children:["Navigate to ",(0,t.jsx)(n.strong,{children:"Module > Module settings > Widgets"})," to find and set up the Maps Widget. Alternatively, you can access Maps Widgets through the ",(0,t.jsx)(n.strong,{children:"Tab Widgets"})," option from a dashboard."]}),"\n",(0,t.jsx)(n.p,{children:"To configure the Maps Widget through the FlowAgent UI, follow these steps:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Name"}),": Enter a name for the widget to identify it on the dashboard."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Label"}),": Enter a label for the widget."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Type"}),": Select 'Maps' from the dropdown to choose the widget type."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Sort"}),": Specify the position of the widget on the dashboard."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Size"}),": Set the size of the widget (between 1 and 12)."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Tabs"}),": Select the tabs where this widget should be displayed."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Columns"}),": Add columns that should be included in the widget. Fields referenced in the JSON configuration must also be listed here to ensure the widget functions correctly."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Query"}),": Provide a JSON query to filter data displayed on the map."]}),"\n"]}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Tip"}),": Any field that is referenced in the JSON configuration must also be added to the ",(0,t.jsx)(n.strong,{children:"Columns"})," list through the UI setup. This ensures that all necessary data is available for the widget to function correctly and display the intended information."]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"You can configure the Maps Widget using JSON to further customize its settings. Each property allows for specific customizations to ensure the map behaves and displays data in a manner that best suits user needs."}),"\n",(0,t.jsx)(n.h4,{id:"31-module-id-configuration",children:"3.1 Module ID Configuration"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"moduleid"})," property specifies which module provides the data that will be represented on the map."]}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Property"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Required"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsx)(n.tbody,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"moduleid"})}),(0,t.jsx)(n.td,{children:"integer"}),(0,t.jsx)(n.td,{children:"Yes"}),(0,t.jsx)(n.td,{children:"Unique identifier for the module whose data will be represented on the map."})]})})]}),"\n",(0,t.jsx)(n.h5,{id:"example",children:"Example"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "moduleid": 52\n}\n'})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.em,{children:"Explanation:"})," This example demonstrates how to configure the respective JSON properties to achieve the desired functionality in the Maps Widget. Each property plays a specific role, such as defining the data source."]}),"\n",(0,t.jsx)(n.h4,{id:"32-latitude-and-longitude-configuration",children:"3.2 Latitude and Longitude Configuration"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"lat"})," and ",(0,t.jsx)(n.code,{children:"lng"})," properties are used in scenarios where only one item needs to be added to a map. This is typically the item that the map widget is being viewed on."]}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"latField"})," and ",(0,t.jsx)(n.code,{children:"lngField"})," properties are used in combination with a query to display multiple items on the map."]}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Property"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Required"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"lat"})}),(0,t.jsx)(n.td,{children:"string"}),(0,t.jsx)(n.td,{children:"Yes"}),(0,t.jsxs)(n.td,{children:["Latitude value for the location, which can be dynamically set using placeholders (e.g., ",(0,t.jsx)(n.code,{children:"[cf1154]"}),")."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"lng"})}),(0,t.jsx)(n.td,{children:"string"}),(0,t.jsx)(n.td,{children:"Yes"}),(0,t.jsxs)(n.td,{children:["Longitude value for the location, which can be dynamically set using placeholders (e.g., ",(0,t.jsx)(n.code,{children:"[cf1155]"}),")."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"latField"})}),(0,t.jsx)(n.td,{children:"string"}),(0,t.jsx)(n.td,{children:"Yes"}),(0,t.jsx)(n.td,{children:"Field used to determine the latitude of items on the map."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"lngField"})}),(0,t.jsx)(n.td,{children:"string"}),(0,t.jsx)(n.td,{children:"Yes"}),(0,t.jsx)(n.td,{children:"Field used to determine the longitude of items on the map."})]})]})]}),"\n",(0,t.jsx)(n.h5,{id:"example-1",children:"Example"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "lat": "[cf1154]",\n  "lng": "[cf1155]",\n  "latField": "cf1066",\n  "lngField": "cf1067"\n}\n'})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.em,{children:"Explanation:"})," This example demonstrates the use of both direct coordinates (",(0,t.jsx)(n.code,{children:"lat"})," and ",(0,t.jsx)(n.code,{children:"lng"}),") for a single item and field references (",(0,t.jsx)(n.code,{children:"latField"})," and ",(0,t.jsx)(n.code,{children:"lngField"}),") for multiple items."]}),"\n",(0,t.jsx)(n.h4,{id:"33-popup-configuration",children:"3.3 Popup Configuration"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"popupTitleField"})," and ",(0,t.jsx)(n.code,{children:"popupContentField"})," properties are used to configure the popups that appear when clicking on a marker."]}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Property"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Required"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"popupTitleField"})}),(0,t.jsx)(n.td,{children:"string"}),(0,t.jsx)(n.td,{children:"No"}),(0,t.jsx)(n.td,{children:"Field used to determine the title in the popup that appears when clicking on a marker."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"popupContentField"})}),(0,t.jsx)(n.td,{children:"string"}),(0,t.jsx)(n.td,{children:"No"}),(0,t.jsx)(n.td,{children:"Field used to determine the content in the popup that appears when clicking on a marker."})]})]})]}),"\n",(0,t.jsx)(n.h5,{id:"example-2",children:"Example"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "popupTitleField": "cf636",\n  "popupContentField": "cfmodule77MitName"\n}\n'})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.em,{children:"Explanation:"})," This example shows how to set up the popup content when a marker is clicked, allowing users to display relevant information about each location."]}),"\n",(0,t.jsx)(n.h4,{id:"34-widget-display-configuration",children:"3.4 Widget Display Configuration"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"showWidgetHeader"})," and ",(0,t.jsx)(n.code,{children:"height"})," properties allow you to customize the appearance of the map widget."]}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Property"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Required"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"showWidgetHeader"})}),(0,t.jsx)(n.td,{children:"boolean"}),(0,t.jsx)(n.td,{children:"No"}),(0,t.jsxs)(n.td,{children:["Determines whether the widget header should be displayed (",(0,t.jsx)(n.code,{children:"true"})," or ",(0,t.jsx)(n.code,{children:"false"}),")."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"height"})}),(0,t.jsx)(n.td,{children:"integer"}),(0,t.jsx)(n.td,{children:"No"}),(0,t.jsx)(n.td,{children:"Height of the map in pixels."})]})]})]}),"\n",(0,t.jsx)(n.h5,{id:"example-3",children:"Example"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "showWidgetHeader": false,\n  "height": 400\n}\n'})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.em,{children:"Explanation:"})," This example demonstrates how to adjust the widget's appearance, such as hiding the widget header and setting the height in pixels."]}),"\n",(0,t.jsx)(n.h4,{id:"35-data-filtering-with-queries",children:"3.5 Data Filtering with Queries"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"query"})," property is used to filter the data that is displayed on the map. It is an array of conditions."]}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Property"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Required"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsx)(n.tbody,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"query"})}),(0,t.jsx)(n.td,{children:"array"}),(0,t.jsx)(n.td,{children:"No"}),(0,t.jsx)(n.td,{children:"Array of conditions to filter the data that is displayed on the map."})]})})]}),"\n",(0,t.jsx)(n.h5,{id:"example-4",children:"Example"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "query": [\n    [\n      "module75Item.id",\n      "=",\n      "[itemid]"\n    ],\n    [\n      "cf649.string",\n      "IN",\n      [\n        "option_863",\n        "option_862",\n        "option_846"\n      ]\n    ],\n    [\n      "cf1066.string",\n      "!=",\n      ""\n    ],\n    [\n      "cf1067.string",\n      "!=",\n      ""\n    ]\n  ]\n}\n'})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.em,{children:"Explanation:"})," This example shows how to use queries to filter the data displayed on the map, ensuring only the relevant items are shown."]}),"\n",(0,t.jsx)(n.h4,{id:"36-relations-configuration",children:"3.6 Relations Configuration"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"relations"})," property defines relationships between different modules within the widget."]}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Property"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Required"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsx)(n.tbody,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"relations"})}),(0,t.jsx)(n.td,{children:"object"}),(0,t.jsx)(n.td,{children:"No"}),(0,t.jsx)(n.td,{children:"Defines relationships between different modules within the widget."})]})})]}),"\n",(0,t.jsx)(n.h5,{id:"example-5",children:"Example"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "relations": {\n    "module75": {\n      "parent": 75,\n      "child": 77,\n      "relationid": 79\n    }\n  }\n}\n'})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.em,{children:"Explanation:"})," This example demonstrates how to set up relationships between modules, which is useful when multiple related datasets need to be displayed."]}),"\n",(0,t.jsx)(n.h4,{id:"37-marker-icon-configuration",children:"3.7 Marker Icon Configuration"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"markerIconCondition"})," property allows dynamic changes to the marker icon based on specific field values."]}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Property"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Required"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"markerIconCondition"})}),(0,t.jsx)(n.td,{children:"object"}),(0,t.jsx)(n.td,{children:"No"}),(0,t.jsx)(n.td,{children:"Allows dynamic changes to the marker icon based on specific field values."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"field"})}),(0,t.jsx)(n.td,{children:"string"}),(0,t.jsx)(n.td,{children:"Yes"}),(0,t.jsx)(n.td,{children:"The field whose value will be used to determine the marker icon."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"default"})}),(0,t.jsx)(n.td,{children:"string"}),(0,t.jsx)(n.td,{children:"Yes"}),(0,t.jsx)(n.td,{children:"The default icon to use if no condition matches."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"condition"})}),(0,t.jsx)(n.td,{children:"object"}),(0,t.jsx)(n.td,{children:"Yes"}),(0,t.jsx)(n.td,{children:"A mapping of specific values of a field to icons."})]})]})]}),"\n",(0,t.jsx)(n.h5,{id:"example-6",children:"Example"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "markerIconCondition": {\n    "field": "module77MitName",\n    "default": "star",\n    "condition": {\n      "Entreprise": "construction",\n      "Tilsyn": "signpost"\n    }\n  }\n}\n'})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.em,{children:"Explanation:"})," This example shows how to use the ",(0,t.jsx)(n.code,{children:"markerIconCondition"})," to customize marker icons based on data values, which can enhance visualization by differentiating locations."]}),"\n",(0,t.jsx)(n.h4,{id:"38-marker-color-configuration",children:"3.8 Marker Color Configuration"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"markerColorCondition"})," property allows dynamic changes to the marker color based on specific field values."]}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Property"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Required"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"markerColorCondition"})}),(0,t.jsx)(n.td,{children:"object"}),(0,t.jsx)(n.td,{children:"No"}),(0,t.jsx)(n.td,{children:"Allows dynamic changes to the marker color based on specific field values."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"field"})}),(0,t.jsx)(n.td,{children:"string"}),(0,t.jsx)(n.td,{children:"Yes"}),(0,t.jsx)(n.td,{children:"The field whose value will be used to determine the marker color."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"default"})}),(0,t.jsx)(n.td,{children:"string"}),(0,t.jsx)(n.td,{children:"Yes"}),(0,t.jsx)(n.td,{children:"The default color to use if no condition matches."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"condition"})}),(0,t.jsx)(n.td,{children:"object"}),(0,t.jsx)(n.td,{children:"Yes"}),(0,t.jsx)(n.td,{children:'A mapping of specific values of a "field" to colors'})]})]})]}),"\n",(0,t.jsx)(n.h5,{id:"example-7",children:"Example"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "markerColorCondition": {\n    "field": "moduleitem_id",\n    "default": "#6060ff",\n    "condition": {\n      "Entreprise": "#6060ff",\n      "Tilsyn": "green"\n    }\n  }\n}\n'})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.em,{children:"Explanation:"})," This example demonstrates how to dynamically change marker colors based on specific field values, allowing for better data visualization."]})]})}function c(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}},6545:(e,n,i)=>{i.d(n,{Z:()=>t});const t=i.p+"assets/images/apps-maps-main-6faf9cabceb373057a986db01c9fa5bc.png"},1151:(e,n,i)=>{i.d(n,{Z:()=>l,a:()=>r});var t=i(7294);const s={},d=t.createContext(s);function r(e){const n=t.useContext(d);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),t.createElement(d.Provider,{value:n},e.children)}}}]);