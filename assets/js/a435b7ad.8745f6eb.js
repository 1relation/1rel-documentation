"use strict";(self.webpackChunk_1_relation_documentation=self.webpackChunk_1_relation_documentation||[]).push([[3702],{5678:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>r,default:()=>c,frontMatter:()=>l,metadata:()=>s,toc:()=>a});const s=JSON.parse('{"id":"modules/module-item-types","title":"Module Item Types","description":"Module Item Types let you categorize items within a module, reducing the need for separate modules when differences are minor.","source":"@site/docs/modules/module-item-types.md","sourceDirName":"modules","slug":"/modules/module-item-types","permalink":"/docs/modules/module-item-types","draft":false,"unlisted":false,"editUrl":"https://github.com/flowagentnu/1rel-documentation/tree/main/docs/modules/module-item-types.md","tags":[],"version":"current","frontMatter":{},"sidebar":"docs","previous":{"title":"Custom Fields","permalink":"/docs/modules/customfields"},"next":{"title":"Relations","permalink":"/docs/modules/relations"}}');var i=t(4848),o=t(8453);const l={},r="Module Item Types",d={},a=[{value:"When to Use",id:"when-to-use",level:2},{value:"How It Works",id:"how-it-works",level:2},{value:"Usage Example",id:"usage-example",level:2},{value:"Creating and Configuring Types",id:"creating-and-configuring-types",level:2}];function u(e){const n={h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",ul:"ul",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"module-item-types",children:"Module Item Types"})}),"\n",(0,i.jsx)(n.p,{children:"Module Item Types let you categorize items within a module, reducing the need for separate modules when differences are minor."}),"\n",(0,i.jsx)(n.h2,{id:"when-to-use",children:"When to Use"}),"\n",(0,i.jsx)(n.p,{children:"Use item types when you want to distinguish between different item categories (e.g., Journal, Delivery, Waste) within the same module."}),"\n",(0,i.jsx)(n.h2,{id:"how-it-works",children:"How It Works"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:'Define types in module settings (e.g., "Types" tab).'}),"\n",(0,i.jsx)(n.li,{children:"Assign custom fields, tabs, and relations to each type."}),"\n",(0,i.jsx)(n.li,{children:"Types control which fields and tabs are visible for each item."}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"usage-example",children:"Usage Example"}),"\n",(0,i.jsx)(n.p,{children:'Suppose you have an Orders module with two types: "Journal" and "Delivery".'}),"\n",(0,i.jsx)(n.h2,{id:"creating-and-configuring-types",children:"Creating and Configuring Types"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:'Go to module settings and select "Types."'}),"\n",(0,i.jsx)(n.li,{children:'Click "Create" or edit an existing type.'}),"\n",(0,i.jsx)(n.li,{children:"Assign fields and tabs for each type."}),"\n",(0,i.jsx)(n.li,{children:"Save your changes."}),"\n"]})]})}function c(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(u,{...e})}):u(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>l,x:()=>r});var s=t(6540);const i={},o=s.createContext(i);function l(e){const n=s.useContext(o);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);