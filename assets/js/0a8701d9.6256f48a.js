"use strict";(self.webpackChunk_1_relation_documentation=self.webpackChunk_1_relation_documentation||[]).push([[253],{7750:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>d,default:()=>o,frontMatter:()=>i,metadata:()=>a,toc:()=>c});var t=r(5893),s=r(1151);const i={},d="Chart Widget",a={id:"modules/widgets/chart",title:"Chart Widget",description:"The Chart Widget provides a graphical representation of data, allowing users to visualize key metrics in a clear and concise way. This widget is highly customizable to suit various use cases, such as displaying financial metrics like sales and costs.",source:"@site/docs/modules/widgets/chart.md",sourceDirName:"modules/widgets",slug:"/modules/widgets/chart",permalink:"/docs/modules/widgets/chart",draft:!1,unlisted:!1,editUrl:"https://github.com/flowagentnu/1rel-documentation/tree/main/docs/modules/widgets/chart.md",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Maps widget",permalink:"/docs/modules/widgets/maps"},next:{title:"Event Timeline",permalink:"/docs/modules/widgets/calendar-timeline"}},l={},c=[{value:"JSON Configuration",id:"json-configuration",level:2},{value:"Chart Object Properties",id:"chart-object-properties",level:3},{value:"Examples",id:"examples",level:2},{value:"Example 1: Pie Chart for Financial Metrics",id:"example-1-pie-chart-for-financial-metrics",level:3},{value:"Example 2: Bar Chart for Financial Metrics",id:"example-2-bar-chart-for-financial-metrics",level:3},{value:"Example 3: Query-Based Data Chart",id:"example-3-query-based-data-chart",level:3},{value:"Example 4: Query-Based Chart with Multiple Summed Columns",id:"example-4-query-based-chart-with-multiple-summed-columns",level:3}];function h(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"chart-widget",children:"Chart Widget"}),"\n",(0,t.jsx)(n.p,{children:"The Chart Widget provides a graphical representation of data, allowing users to visualize key metrics in a clear and concise way. This widget is highly customizable to suit various use cases, such as displaying financial metrics like sales and costs."}),"\n",(0,t.jsx)(n.h2,{id:"json-configuration",children:"JSON Configuration"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"/docs/modules/widgets/common-properties",children:"Common Widget Properties"})}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Property"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Required"}),(0,t.jsx)(n.th,{children:"Default Value"}),(0,t.jsx)(n.th,{children:"Options"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"chart"})}),(0,t.jsx)(n.td,{children:"object"}),(0,t.jsx)(n.td,{children:"Yes"}),(0,t.jsx)(n.td,{children:"N/A"}),(0,t.jsx)(n.td,{children:"N/A"}),(0,t.jsx)(n.td,{children:"Defines the chart's settings, including type, labels, data, and colors."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"moduleid"})}),(0,t.jsx)(n.td,{children:"integer"}),(0,t.jsx)(n.td,{children:"Yes"}),(0,t.jsx)(n.td,{children:"Current Module"}),(0,t.jsx)(n.td,{children:"N/A"}),(0,t.jsx)(n.td,{children:"The ID of the module to fetch data from."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"query"})}),(0,t.jsx)(n.td,{children:"array"}),(0,t.jsx)(n.td,{children:"Yes"}),(0,t.jsx)(n.td,{children:"N/A"}),(0,t.jsx)(n.td,{children:"N/A"}),(0,t.jsx)(n.td,{children:"Specifies the filtering criteria for fetching data."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"group"})}),(0,t.jsx)(n.td,{children:"object"}),(0,t.jsx)(n.td,{children:"No"}),(0,t.jsx)(n.td,{children:"N/A"}),(0,t.jsx)(n.td,{children:"N/A"}),(0,t.jsx)(n.td,{children:"Defines how data is aggregated (e.g., sum or count)."})]})]})]}),"\n",(0,t.jsx)(n.h3,{id:"chart-object-properties",children:"Chart Object Properties"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Property"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Required"}),(0,t.jsx)(n.th,{children:"Default Value"}),(0,t.jsx)(n.th,{children:"Options"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"type"})}),(0,t.jsx)(n.td,{children:"string"}),(0,t.jsx)(n.td,{children:"Yes"}),(0,t.jsx)(n.td,{children:"N/A"}),(0,t.jsx)(n.td,{children:'"pie", "bar"'}),(0,t.jsx)(n.td,{children:"Specifies the type of chart to display."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"label"})}),(0,t.jsx)(n.td,{children:"string"}),(0,t.jsx)(n.td,{children:"Yes"}),(0,t.jsx)(n.td,{children:"N/A"}),(0,t.jsx)(n.td,{children:"N/A"}),(0,t.jsx)(n.td,{children:"The title of the chart displayed to users."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"labels"})}),(0,t.jsx)(n.td,{children:"string/array"}),(0,t.jsx)(n.td,{children:"Yes"}),(0,t.jsx)(n.td,{children:"N/A"}),(0,t.jsx)(n.td,{children:"Custom field reference, array of strings"}),(0,t.jsx)(n.td,{children:"The labels for each segment of the chart. Can reference a single custom field or be a predefined list of strings."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"data"})}),(0,t.jsx)(n.td,{children:"string/array"}),(0,t.jsx)(n.td,{children:"Yes"}),(0,t.jsx)(n.td,{children:"N/A"}),(0,t.jsx)(n.td,{children:'Custom field reference, array of numbers, or "query"'}),(0,t.jsxs)(n.td,{children:["Data values corresponding to each label. Can reference a single custom field, be a predefined list of numbers, or dynamically fetch data using ",(0,t.jsx)(n.code,{children:'"query"'}),"."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"backgroundColor"})}),(0,t.jsx)(n.td,{children:"array"}),(0,t.jsx)(n.td,{children:"Yes"}),(0,t.jsx)(n.td,{children:"N/A"}),(0,t.jsx)(n.td,{children:"N/A"}),(0,t.jsx)(n.td,{children:"Specifies colors for each data segment."})]})]})]}),"\n",(0,t.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,t.jsx)(n.h3,{id:"example-1-pie-chart-for-financial-metrics",children:"Example 1: Pie Chart for Financial Metrics"}),"\n",(0,t.jsx)(n.p,{children:'This example creates a pie chart titled "Economy" with two data points: Sales and Cost.'}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "chart": {\n    "type": "pie",\n    "label": "Economy",\n    "labels": [\n      "Salesvalue",\n      "Cost"\n    ],\n    "data": [\n      "[cf1270]",\n      "[cf1271]"\n    ],\n    "backgroundColor": [\n      "green",\n      "orange"\n    ]\n  }\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"example-2-bar-chart-for-financial-metrics",children:"Example 2: Bar Chart for Financial Metrics"}),"\n",(0,t.jsx)(n.p,{children:'This example creates a bar chart titled "Economy" with the same data as the previous example.'}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "chart": {\n    "type": "bar",\n    "label": "Economy",\n    "labels": [\n      "Salesvalue",\n      "Cost"\n    ],\n    "data": [\n      "[cf1270]",\n      "[cf1271]"\n    ],\n    "backgroundColor": [\n      "blue",\n      "red"\n    ]\n  }\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"example-3-query-based-data-chart",children:"Example 3: Query-Based Data Chart"}),"\n",(0,t.jsxs)(n.p,{children:["This example demonstrates how to use a query to fetch data for the chart. The ",(0,t.jsx)(n.code,{children:"data"})," property is set to ",(0,t.jsx)(n.code,{children:'"query"'}),", which instructs the system to dynamically retrieve and aggregate data based on the specified query and group settings."]}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"labels"})," property points to a custom field containing label information, while the ",(0,t.jsx)(n.code,{children:"query"})," and ",(0,t.jsx)(n.code,{children:"group"})," properties handle data filtering and aggregation."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "moduleid": 40,\n  "chart": {\n    "type": "bar",\n    "label": "Data",\n    "labels": "cf223",\n    "data": "query",\n    "backgroundColor": [\n      "green",\n      "orange"\n    ]\n  },\n  "query": [\n    [\n      "cf214",\n      ">",\n      0\n    ]\n  ],\n  "group": {\n    "cf214": "sum"\n  }\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"example-4-query-based-chart-with-multiple-summed-columns",children:"Example 4: Query-Based Chart with Multiple Summed Columns"}),"\n",(0,t.jsx)(n.p,{children:"This example shows how to fetch data using a query and group it based on two columns, summing their values. This configuration is ideal for visualizing datasets where multiple metrics are aggregated."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "chart": {\n    "type": "pie",\n    "label": "Economy",\n    "data": "query",\n    "backgroundColor": [\n      "green",\n      "orange"\n    ]\n  },\n  "relations": {\n    "module77": {\n      "parent": 75,\n      "child": 77,\n      "relationid": 79\n    }\n  },\n  "query": [\n    [\n      "cf1270",\n      ">",\n      0\n    ]\n  ],\n  "group": {\n    "cf1270": "sum",\n    "cf1271": "sum"\n  }\n}\n'})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Explanation:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"chart"}),": Defines the chart's type and appearance."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"data"}),": Set to ",(0,t.jsx)(n.code,{children:'"query"'})," to dynamically fetch data."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"relations"}),": Specifies relationships between modules for data retrieval."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"query"}),": Filters the data to include only values greater than 0 in ",(0,t.jsx)(n.code,{children:"cf1270"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"group"}),": Aggregates the filtered data, summing up values in both ",(0,t.jsx)(n.code,{children:"cf1270"})," and ",(0,t.jsx)(n.code,{children:"cf1271"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"backgroundColor"}),": Specifies colors for the chart segments."]}),"\n"]})]})}function o(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}},1151:(e,n,r)=>{r.d(n,{Z:()=>a,a:()=>d});var t=r(7294);const s={},i=t.createContext(s);function d(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:d(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);