"use strict";(self.webpackChunk_1_relation_documentation=self.webpackChunk_1_relation_documentation||[]).push([[1490],{8472:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>d,default:()=>a,frontMatter:()=>r,metadata:()=>o,toc:()=>c});var s=i(5893),t=i(1151);const r={},d="JSON Actions",o={id:"JSON/json-actions",title:"JSON Actions",description:"Overview",source:"@site/docs/JSON/json-actions.md",sourceDirName:"JSON",slug:"/JSON/json-actions",permalink:"/docs/JSON/json-actions",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/JSON/json-actions.md",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"JSON Queries",permalink:"/docs/JSON/json-query"}},l={},c=[{value:"Overview",id:"overview",level:2},{value:"Purpose of Actions",id:"purpose-of-actions",level:2},{value:"Anatomy of an Action",id:"anatomy-of-an-action",level:2},{value:"Structure of an Action",id:"structure-of-an-action",level:3},{value:"Example Action",id:"example-action",level:3},{value:"Defining Conditions (<code>if</code>)",id:"defining-conditions-if",level:2},{value:"Examples of Conditions",id:"examples-of-conditions",level:3},{value:"Defining Actions (<code>then</code>)",id:"defining-actions-then",level:2},{value:"CRUD Operations in Actions",id:"crud-operations-in-actions",level:2},{value:"Overview of CRUD Operations",id:"overview-of-crud-operations",level:3},{value:"Example of CRUD Operations",id:"example-of-crud-operations",level:3},{value:"Insert Properties",id:"insert-properties",level:3},{value:"Properties of Insert",id:"properties-of-insert",level:4},{value:"Example of Insert Operation",id:"example-of-insert-operation",level:4},{value:"Update Properties",id:"update-properties",level:3},{value:"Properties of Update",id:"properties-of-update",level:4},{value:"Example of Update Operation",id:"example-of-update-operation",level:4},{value:"Custom Fields in Actions",id:"custom-fields-in-actions",level:2},{value:"Ways to Assign Values to Custom Fields",id:"ways-to-assign-values-to-custom-fields",level:3},{value:"Examples of Assigning Values to Custom Fields",id:"examples-of-assigning-values-to-custom-fields",level:2},{value:"Fixed Value",id:"fixed-value",level:3},{value:"Form Field Value",id:"form-field-value",level:3},{value:"Form Field with Strip",id:"form-field-with-strip",level:3},{value:"Dropdown Option",id:"dropdown-option",level:3},{value:"Referenced Custom Field",id:"referenced-custom-field",level:3},{value:"Relate Properties",id:"relate-properties",level:3},{value:"Properties of Relate",id:"properties-of-relate",level:4},{value:"Example of Relate Operation",id:"example-of-relate-operation",level:4},{value:"Delete Properties",id:"delete-properties",level:3},{value:"Properties of Delete",id:"properties-of-delete",level:4},{value:"Example of Delete Operation",id:"example-of-delete-operation",level:4},{value:"Form Interactions",id:"form-interactions",level:2},{value:"Show Form",id:"show-form",level:3},{value:"Properties of Show Form",id:"properties-of-show-form",level:4},{value:"Example of Show Form",id:"example-of-show-form",level:4},{value:"Show Relevant Forms",id:"show-relevant-forms",level:3},{value:"Properties of Show Relevant Forms",id:"properties-of-show-relevant-forms",level:4},{value:"Example of Show Relevant Forms",id:"example-of-show-relevant-forms",level:4}];function h(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"json-actions",children:"JSON Actions"}),"\n",(0,s.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,s.jsx)(n.p,{children:"Actions in 1Relation enable dynamic and automated interactions within your system. They allow for the execution of predefined tasks based on user interactions or specific conditions, making forms and systems more interactive and intelligent."}),"\n",(0,s.jsx)(n.h2,{id:"purpose-of-actions",children:"Purpose of Actions"}),"\n",(0,s.jsx)(n.p,{children:"Actions serve various purposes, including data management through CRUD operations, form navigation, and providing custom responses. They act as a digital workforce in your system, ready to perform tasks on command."}),"\n",(0,s.jsx)(n.h2,{id:"anatomy-of-an-action",children:"Anatomy of an Action"}),"\n",(0,s.jsxs)(n.p,{children:["An action in 1Relation is a structured object that defines when it should be triggered (",(0,s.jsx)(n.code,{children:"if"}),") and what it should do (",(0,s.jsx)(n.code,{children:"then"}),"). It's a crucial part of making your forms and systems interactive."]}),"\n",(0,s.jsx)(n.h3,{id:"structure-of-an-action",children:"Structure of an Action"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Property"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Required"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"name"})}),(0,s.jsx)(n.td,{children:"string"}),(0,s.jsx)(n.td,{children:"Yes"}),(0,s.jsx)(n.td,{children:"Identifies the action for easier management and understanding."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"if"})}),(0,s.jsx)(n.td,{children:"array"}),(0,s.jsx)(n.td,{children:"No"}),(0,s.jsx)(n.td,{children:"Specifies the conditions under which the action is triggered."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"then"})}),(0,s.jsx)(n.td,{children:"object"}),(0,s.jsx)(n.td,{children:"Yes"}),(0,s.jsx)(n.td,{children:"Outlines the tasks to be executed when the conditions are met."})]})]})]}),"\n",(0,s.jsx)(n.h3,{id:"example-action",children:"Example Action"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n  "actions": [\n    {\n      "name": "Add New Customer",\n      "if": [\n        ["customerName", "=", "John"]\n      ],\n      "then": {\n        "crud": {\n          "insert": {\n            "customer": {\n              "moduleid": 50,\n              "moduleitemtype_id": "111",\n              "customfield": {\n                "cf100": "post[name]",\n                "cf101": "post[phonenumber]",\n                "cf102": "post[email]",\n                "cf103": "post[role]",\n                "cf104": "blue"\n              }\n            }\n          }\n        }\n      }\n    }\n  ]\n}\n'})}),"\n",(0,s.jsxs)(n.h2,{id:"defining-conditions-if",children:["Defining Conditions (",(0,s.jsx)(n.code,{children:"if"}),")"]}),"\n",(0,s.jsxs)(n.p,{children:["Setting conditions is like setting the rules of the game. They determine when an action should kick into gear.\nIt uses a structured query format as described in the ",(0,s.jsx)(n.a,{href:"/docs/JSON/json-query",children:"JSON Query Documentation"}),".."]}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Property"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Required"}),(0,s.jsx)(n.th,{children:"Options"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Key"}),(0,s.jsx)(n.td,{children:"string"}),(0,s.jsx)(n.td,{children:"Yes"}),(0,s.jsx)(n.td,{children:"Various"}),(0,s.jsx)(n.td,{children:"The field or attribute to be evaluated (e.g., a user group or custom field)."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Operator"}),(0,s.jsx)(n.td,{children:"string"}),(0,s.jsx)(n.td,{children:"Yes"}),(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.code,{children:"="}),", ",(0,s.jsx)(n.code,{children:"!="}),", ",(0,s.jsx)(n.code,{children:">"}),", ",(0,s.jsx)(n.code,{children:"<"}),", etc."]}),(0,s.jsx)(n.td,{children:"Defines how the key's value should be compared to the condition's value."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Value"}),(0,s.jsx)(n.td,{children:"string"}),(0,s.jsx)(n.td,{children:"Yes"}),(0,s.jsx)(n.td,{children:"Various"}),(0,s.jsx)(n.td,{children:"The value to compare against the key's value."})]})]})]}),"\n",(0,s.jsx)(n.h3,{id:"examples-of-conditions",children:"Examples of Conditions"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'[\n  ["contact.cf469", "!=", "option_753"],\n  ["contact.moduleitemtype_id", "=", 104]\n]\n'})}),"\n",(0,s.jsxs)(n.h2,{id:"defining-actions-then",children:["Defining Actions (",(0,s.jsx)(n.code,{children:"then"}),")"]}),"\n",(0,s.jsxs)(n.p,{children:["When conditions are met, the ",(0,s.jsx)(n.code,{children:"then"})," part defines what happens next. It's where the action truly happens."]}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Property"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Required"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"crud"})}),(0,s.jsx)(n.td,{children:"object"}),(0,s.jsx)(n.td,{children:"No"}),(0,s.jsx)(n.td,{children:"Perform CRUD operations, manipulating data as needed."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"showForm"})}),(0,s.jsx)(n.td,{children:"object"}),(0,s.jsx)(n.td,{children:"No"}),(0,s.jsx)(n.td,{children:"Open a specific form, passing along necessary data."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"showRelevantForms"})}),(0,s.jsx)(n.td,{children:"object"}),(0,s.jsx)(n.td,{children:"No"}),(0,s.jsx)(n.td,{children:"Display forms relevant to the current context or data."})]})]})]}),"\n",(0,s.jsx)(n.p,{children:'Let\'s create a new section titled "CRUD Operations" in the "JSON Actions" document. This section will include an introduction, a properties table for each CRUD operation (insert, update, delete, relate), and a comprehensive example showcasing all four operations.'}),"\n",(0,s.jsx)(n.h2,{id:"crud-operations-in-actions",children:"CRUD Operations in Actions"}),"\n",(0,s.jsx)(n.p,{children:"CRUD operations form the core of data management in 1Relation, allowing you to create, read, update, and delete data items. Understanding and effectively utilizing these operations is crucial for maintaining a dynamic and responsive system."}),"\n",(0,s.jsx)(n.h3,{id:"overview-of-crud-operations",children:"Overview of CRUD Operations"}),"\n",(0,s.jsx)(n.p,{children:"CRUD operations ensure that your system can respond to user inputs and scenarios by manipulating data as needed."}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Operation"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Required"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"insert"})}),(0,s.jsx)(n.td,{children:"object"}),(0,s.jsx)(n.td,{children:"No"}),(0,s.jsx)(n.td,{children:"Adds new data items to the system."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"update"})}),(0,s.jsx)(n.td,{children:"object"}),(0,s.jsx)(n.td,{children:"No"}),(0,s.jsx)(n.td,{children:"Modifies existing data items."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"delete"})}),(0,s.jsx)(n.td,{children:"array"}),(0,s.jsx)(n.td,{children:"No"}),(0,s.jsx)(n.td,{children:"Removes data items from the system."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"relate"})}),(0,s.jsx)(n.td,{children:"array"}),(0,s.jsx)(n.td,{children:"No"}),(0,s.jsx)(n.td,{children:"Defines or updates relationships between data items."})]})]})]}),"\n",(0,s.jsx)(n.h3,{id:"example-of-crud-operations",children:"Example of CRUD Operations"}),"\n",(0,s.jsx)(n.p,{children:"In this example, we showcase how to perform insert, update, delete, and relate operations within a single action."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n  "actions": [\n    {\n      "name": "Manage Data",\n      "then": {\n        "crud": {\n          "insert": {\n            "newItem": {\n              "moduleid": 50,\n              "moduleitemtype_id": "111",\n              "customfield": {\n                "cf100": "post[value1]",\n                "cf101": "post[value2]"\n              }\n            }\n          },\n          "update": {\n            "existingItem": {\n              "moduleitemtype_id": "112",\n              "customfield": {\n                "cf102": "post[value3]",\n                "cf103": "post[value4]"\n              }\n            }\n          },\n          "delete": [\n            "itemToDelete"\n          ],\n          "relate": [\n            {\n              "child": "childItemKey",\n              "parent": "parentItemKey",\n              "relationid": 123,\n              "unlink": false\n            }\n          ]\n        }\n      }\n    }\n  ]\n}\n'})}),"\n",(0,s.jsx)(n.p,{children:"In this comprehensive example:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Insert"}),": A new item is added to the system with specific custom field values."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Update"}),": An existing item's custom fields are updated with new values."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Delete"}),": A specific item is removed from the system."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Relate"}),": A relationship is defined or updated between two items, potentially linking them together without unlinking."]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"insert-properties",children:"Insert Properties"}),"\n",(0,s.jsx)(n.p,{children:"Insert operations add new data items to the system."}),"\n",(0,s.jsx)(n.h4,{id:"properties-of-insert",children:"Properties of Insert"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Property"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Required"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"moduleid"})}),(0,s.jsx)(n.td,{children:"number"}),(0,s.jsx)(n.td,{children:"Yes"}),(0,s.jsx)(n.td,{children:"Specifies the module where the new item will be added."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"moduleitemtype_id"})}),(0,s.jsx)(n.td,{children:"number"}),(0,s.jsx)(n.td,{children:"Yes"}),(0,s.jsx)(n.td,{children:"Defines the module item type for the new item."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"customfield"})}),(0,s.jsx)(n.td,{children:"object"}),(0,s.jsx)(n.td,{children:"Yes"}),(0,s.jsx)(n.td,{children:"Sets the custom fields and their values for the new item."})]})]})]}),"\n",(0,s.jsx)(n.h4,{id:"example-of-insert-operation",children:"Example of Insert Operation"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'"insert": {\n  "customer": {\n    "moduleid": 50,\n    "moduleitemtype_id": "111",\n    "customfield": {\n      "cf100": "John Doe",\n      "cf101": "1234567890"\n    }\n  }\n}\n'})}),"\n",(0,s.jsx)(n.h3,{id:"update-properties",children:"Update Properties"}),"\n",(0,s.jsx)(n.p,{children:"Update operations modify existing data items."}),"\n",(0,s.jsx)(n.h4,{id:"properties-of-update",children:"Properties of Update"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Property"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Required"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"moduleitemtype_id"})}),(0,s.jsx)(n.td,{children:"number"}),(0,s.jsx)(n.td,{children:"Yes"}),(0,s.jsx)(n.td,{children:"Identifies the module item type for the item being updated."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"customfield"})}),(0,s.jsx)(n.td,{children:"object"}),(0,s.jsx)(n.td,{children:"Yes"}),(0,s.jsx)(n.td,{children:"Determines the custom fields and their new values for the item."})]})]})]}),"\n",(0,s.jsx)(n.h4,{id:"example-of-update-operation",children:"Example of Update Operation"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'"update": {\n  "customer": {\n    "moduleitemtype_id": "111",\n    "customfield": {\n      "cf100": "Jane Doe",\n      "cf101": "0987654321"\n    }\n  }\n}\n'})}),"\n",(0,s.jsx)(n.h2,{id:"custom-fields-in-actions",children:"Custom Fields in Actions"}),"\n",(0,s.jsx)(n.p,{children:"Custom fields allow for dynamic data assignment in actions, enhancing flexibility and adaptability."}),"\n",(0,s.jsx)(n.h3,{id:"ways-to-assign-values-to-custom-fields",children:"Ways to Assign Values to Custom Fields"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Method"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Required"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Fixed Value"}),(0,s.jsx)(n.td,{children:"string"}),(0,s.jsx)(n.td,{children:"Yes"}),(0,s.jsx)(n.td,{children:"Assigns a fixed value directly to the custom field."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Form Field Value"}),(0,s.jsx)(n.td,{children:"string"}),(0,s.jsx)(n.td,{children:"Yes"}),(0,s.jsx)(n.td,{children:"Utilizes a value entered by the user in a form field."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Form Field with Strip"}),(0,s.jsx)(n.td,{children:"string"}),(0,s.jsx)(n.td,{children:"Yes"}),(0,s.jsx)(n.td,{children:'Strips a specified pattern (e.g., "strip_option") from the form field value.'})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Dropdown Option"}),(0,s.jsx)(n.td,{children:"string"}),(0,s.jsx)(n.td,{children:"Yes"}),(0,s.jsx)(n.td,{children:'Assigns a value from a dropdown custom field using "option_xxx".'})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Referenced Custom Field"}),(0,s.jsx)(n.td,{children:"string"}),(0,s.jsx)(n.td,{children:"Yes"}),(0,s.jsx)(n.td,{children:"Assigns a value by referencing another item's custom field."})]})]})]}),"\n",(0,s.jsx)(n.h2,{id:"examples-of-assigning-values-to-custom-fields",children:"Examples of Assigning Values to Custom Fields"}),"\n",(0,s.jsx)(n.h3,{id:"fixed-value",children:"Fixed Value"}),"\n",(0,s.jsx)(n.p,{children:"Assign a static value directly to the custom field."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'"customfield": {\n  "cf100": "Red"\n}\n'})}),"\n",(0,s.jsx)(n.h3,{id:"form-field-value",children:"Form Field Value"}),"\n",(0,s.jsx)(n.p,{children:"Use a value entered by the user in a form field."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'"customfield": {\n  "cf101": "post[color]"\n}\n'})}),"\n",(0,s.jsx)(n.h3,{id:"form-field-with-strip",children:"Form Field with Strip"}),"\n",(0,s.jsx)(n.p,{children:"Strip a specific pattern from a form field value, commonly used for processing dropdowns, radios, or checkboxes."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'"customfield": {\n  "cf102": "post[visitFrequency]|strip_option"\n}\n'})}),"\n",(0,s.jsx)(n.h3,{id:"dropdown-option",children:"Dropdown Option"}),"\n",(0,s.jsx)(n.p,{children:"Use an option ID for assigning a value from a dropdown custom field."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'"customfield": {\n  "cf103": "option_123"\n}\n'})}),"\n",(0,s.jsx)(n.h3,{id:"referenced-custom-field",children:"Referenced Custom Field"}),"\n",(0,s.jsx)(n.p,{children:"Assign a value by referencing a custom field from another item."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'"customfield": {\n  "cf104": "customer.cf445"\n}\n'})}),"\n",(0,s.jsx)(n.h3,{id:"relate-properties",children:"Relate Properties"}),"\n",(0,s.jsx)(n.p,{children:"Relate operations define or update the relationships between data items."}),"\n",(0,s.jsx)(n.h4,{id:"properties-of-relate",children:"Properties of Relate"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Property"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Required"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"child"})}),(0,s.jsx)(n.td,{children:"string"}),(0,s.jsx)(n.td,{children:"Yes"}),(0,s.jsx)(n.td,{children:"Indicates the child item in the relationship."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"parent"})}),(0,s.jsx)(n.td,{children:"string"}),(0,s.jsx)(n.td,{children:"Yes"}),(0,s.jsx)(n.td,{children:"Specifies the parent item in the relationship."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"relationid"})}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{})]})]})]}),"\n",(0,s.jsxs)(n.p,{children:["| number | No | Provides the ID of the relation type. |\n| ",(0,s.jsx)(n.code,{children:"unlink"})," | boolean | No | Determines if the specified relationship should be unlinked. |"]}),"\n",(0,s.jsx)(n.h4,{id:"example-of-relate-operation",children:"Example of Relate Operation"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'"relate": [\n  {\n    "child": "kunde",\n    "parent": "kampagne",\n    "relationid": 76,\n    "unlink": true\n  }\n]\n'})}),"\n",(0,s.jsx)(n.h3,{id:"delete-properties",children:"Delete Properties"}),"\n",(0,s.jsx)(n.p,{children:"Delete operations remove data items from the system."}),"\n",(0,s.jsx)(n.h4,{id:"properties-of-delete",children:"Properties of Delete"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Property"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Required"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"itemKey"})}),(0,s.jsx)(n.td,{children:"string"}),(0,s.jsx)(n.td,{children:"Yes"}),(0,s.jsx)(n.td,{children:"Defines the key of the item to be deleted."})]})})]}),"\n",(0,s.jsx)(n.h4,{id:"example-of-delete-operation",children:"Example of Delete Operation"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'"delete": [\n  "salgstur"\n]\n'})}),"\n",(0,s.jsx)(n.h2,{id:"form-interactions",children:"Form Interactions"}),"\n",(0,s.jsx)(n.p,{children:"Actions can enhance user interaction with forms, guiding them through the system's functionalities."}),"\n",(0,s.jsx)(n.h3,{id:"show-form",children:"Show Form"}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"showForm"})," operation opens a specific form for user interaction."]}),"\n",(0,s.jsx)(n.h4,{id:"properties-of-show-form",children:"Properties of Show Form"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Property"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Required"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"formId"})}),(0,s.jsx)(n.td,{children:"number"}),(0,s.jsx)(n.td,{children:"Yes"}),(0,s.jsx)(n.td,{children:"Specifies the ID of the form to be opened."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"itemKey"})}),(0,s.jsx)(n.td,{children:"string"}),(0,s.jsx)(n.td,{children:"Yes"}),(0,s.jsx)(n.td,{children:"Identifies the key of the item to be passed to the form."})]})]})]}),"\n",(0,s.jsx)(n.h4,{id:"example-of-show-form",children:"Example of Show Form"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'"showForm": {\n  "formId": 23,\n  "itemKey": "opgave"\n}\n'})}),"\n",(0,s.jsx)(n.h3,{id:"show-relevant-forms",children:"Show Relevant Forms"}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"showRelevantForms"})," operation displays forms that are contextually relevant to the current data or user interaction."]}),"\n",(0,s.jsx)(n.h4,{id:"properties-of-show-relevant-forms",children:"Properties of Show Relevant Forms"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Property"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Required"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"itemKey"})}),(0,s.jsx)(n.td,{children:"string"}),(0,s.jsx)(n.td,{children:"Yes"}),(0,s.jsx)(n.td,{children:"Determines the key of the item based on which relevant forms are displayed."})]})})]}),"\n",(0,s.jsx)(n.h4,{id:"example-of-show-relevant-forms",children:"Example of Show Relevant Forms"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'"showRelevantForms": {\n  "itemKey": "opgave"\n}\n'})})]})}function a(e={}){const{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},1151:(e,n,i)=>{i.d(n,{Z:()=>o,a:()=>d});var s=i(7294);const t={},r=s.createContext(t);function d(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:d(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);